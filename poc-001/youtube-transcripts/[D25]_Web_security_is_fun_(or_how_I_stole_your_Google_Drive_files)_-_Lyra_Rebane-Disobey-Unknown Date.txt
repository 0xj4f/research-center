like it means [Music] nothing wow that intro goes so hard okay so hi everyone uh this talk will be about a vulnerability change I found in Google services uh but on the way I will also be covering uh a bunch of really cool web security Concepts so hopefully you'll be able to pick something out of it for your own research and fun um I'm Lyra you might know me from the internet as re 2001 and I like to play around with the web and web browsers and sometimes I also find vulnerabilities so uh let's start off with the topic of Click checking so uh on the internet you have these things called iframes and essentially what they allow you to do is take one website and put it inside of another one and click checking is using that to trick someone into performing some sort of action that did not intend on performing so let's take a look at an example uh let's just say that I really want to give a talk at some cool hacker event uh but to do that I really need one of the organizers to click this little accept button here how could I accomplish that well uh as a hacker I can just take this admin panel web page thing throw it uh into an ey frame on my own website and cover it up with random stuff and then it's going to look like something completely different I can send this link to one of the organizers uh and they just see this cookie they click on it but in reality they are accepting my talk so that's click checking it's something that has been around since before I was even born um and it's also something that every website is vulnerable to by default but at the same time it's very easy to mitigate uh you can use this x-frame options header uh to limit framing to just the same origin so the same website uh or even PLU it entirely uh depending on what your goals are and these days you can even use content security policy which offers additional features and security uh and since this is such an old attack it is also very widely known and mitigated so even this example from the beginning uh in reality would just give me this little error thing uh let's take a look at another website uh such as Google Docs if I try to frame Google Docs you can see I get the same little error thing and in the headers you can see it does in fact have the x-frame options same origin header so Google Docs is not vulnerable to this type of Click checking attack but something interesting happens once we try to embed a document or a presentation on a website because if we write that for some reason it now works and there is no header so did we just find a vulnerability well not really this Frame is vulnerable to click checking but it's an intentional trade-off to allow framing of the page and it has uh safety measures in place such as disabling most of the dangerous features so even if you do a click checking attack you can't accomplish much all right so that's click checking uh now let's get on to the uh actual story of how I found this vulnerability chain it all started off with me just playing on Google Docs and I just so happened to try out this feature that lets you add a YouTube video into your presentation you just pick it from that video over there or the like picker thing and when you play your presentation you can see we can play the video awesome but uh how does this work well it uses those very same if frames from earlier so that's interesting uh can we do something interesting with it maybe if we change this URL to something else uh I wanted to try it out so I wanted to figure out how this URL got in the first place I fired up my favorite HTTP proxy looked at the traffic and found that we don't give the server the full URL but just the video ID to the video so we can control the entire URL but maybe we can still do something interesting with just this little part there uh so uh I tried uh first thing that came to my mind which is path reversal uh path reversal is this thing in computer systems we're going into a directory that's just do dots will actually take you up one folder and it's the same for websites as well so if we have this YouTube embed dot dot site it will just turn into the YouTube homepage would this work uh I used my HTTP proxy to change this video ID do dot do slash and this is what I saw so you can see this familiar error page but this is a very interesting sign because in fact that means that we are on the YouTube homepage and of course it has those uh protection measures in place so it just gives an error but it's very interesting that we can embed other YouTube pages into our slideshow are there any other interesting pages on YouTube that we might want to frame it seems like most of them just give us this eror because of the x-frame options are there of course we can embed videos but that's where we started so no use in that and we can embed some resources and files and stuff which is extremely funny to have in a slideshow but not very useful from a security perspective what we really want to do is somehow break out of that YouTube thing entirely and what we want for that is an open redirect so what is an open redirect it's this quote unquote vulnerability that takes you from one URL to another one uh and in most cases this is not even considered to be an actual vulnerability because well it doesn't really have much impact but uh these kinds of things are extremely useful for chaining them with other things so if we could find one we could break out of the YouTube domain entirely so how do you find one the first thing that came to my mind was looking at the links in the description because if you didn't know on YouTube The Links will first go through this weird redirect URL and only then to the actual page you were going for but unfortunately it turns out this thing has this weird token thing in it as well and uh this means that uh if someone elsewhere to open this link with a different login session it would just show them this page so we would have to trick them into clicking the go to site button and even worse for our case it has the very same header set so that wouldn't even work okay where else could we find an open redirect maybe the login feature because if you log in onto a website you would expect it to take you back to the same page you were on before so let's see if that's the case clicking that link opens up this long Google URL and once you log in uh it takes you to this other YouTube signin URL thing and then it takes you back to the same page you were on so what we're interested in is this little login signin thing URL so let's clean it up a little and take a look at it this is the URL if we go on this URL it takes us to youtube.com awesome can we use this as an open redirect to some other Pages let's try my own website huh it doesn't work okay maybe it's limited to like Google stuff that's like google.com hm that didn't work either interesting but then the youtube.com works at least right huh we just saw this youtube.com redirect work earlier but now it no longer works what's up with that well it turns out uh I forgot the small little detail in the URL there the subdomain if we change it to www it works awesome but that raises the question if it's just youtube.com URLs why would they put the full URL there instead of just a path I was confused by that but then I remembered that YouTube has some other services as well such as YouTube music so maybe we can instead of www go to music. youtube.com yep that works so can does that mean that we can go to any YouTube subdomain let's try the I don't know admin one yep it works awesome so you can see here how we have been chipping away at the texture surface slowly uh we started off with just an embeds then we we B traversed our way to the entire www.youtube.com domain and now we have access to every YouTube sub domain um but then I didn't really know what to do next and I was kind of stuck so I took a break and went on to do some research on some other sites eventually I was researching Google's login flow and I was looking at the requests to see if anything interesting is going on and then I noticed something even though I am looking onto Google's website google.com for some reason it's going through accounts. youtube.com that's interesting it seems like uh what happens is if you log into one Google service it tries to log you into every domain just so it's more convenient for you so uh if you log on to gmail you also get logged into YouTube but maybe we can use that somehow let's see if we can use that as an open redirect huh still no but maybe we can at least redirect to Google services because it's supposed to be like a part of the login flow and yeah that works can we maybe roll around back to Google dogs yep that works as well so you can see have with just a little bit more work we have increased our attack surface back to the Google Docs website which lets us do some very interesting stuff so uh let's try it out we create this video IDE that is a combination of all of our weird patchs and redirects and stuff and when we put it on a slide it goes through all the redirects and we get Google Docs inside of Google docs and the reason this is really cool is that we can now create the slideshows that are recursive but notice something interesting about this this Google Docs homepage has the same origin header set yet it works here the reason for that is because the iframe is on docs.google.com and the content of the if frame is that as well so we have just found a way to create same origin Google Docs if frames on the Google Docs domain and now from here and out it's very easy we just uh you know set up some weird click checking stuff uh I don't know let the user click some hacking button and we're done awesome but what's the actual impact of this I looked around a bit and it seems like there really isn't much you can do from the Google Docs homepage so like the wor thing you can do is delete the docent that even that requires like pressing two separate buttons and only puts it in the trash instead of deleting permanently so not very useful but maybe there are some other interesting pages on the Google Docs domain uh I did some Recon I started off with Wayback machine on Wayback machine if you put in a domain you can actually click that little URLs button and that lets you see all of the archived URLs so this is an amazing resource for Recon but in this I couldn't find anything that would be useful for me next I tried something uh called Google Dorking where you just uh put some search parameter things in the search and find stuff I was going through different versions of file preview pages but it seemed like they all redirect you to Google Drive which kind of breaks this thing for us this open thing goes to Google Drive this Lea thing goes to Google Drive uh this file view think that goes to Google Drive this folder thing goes to Google Drive so it seems kind of hopeless it seems like they migrated everything but then I just randomly found this very specific URL format that doesn't go to Google Drive but gives us the same page that's interesting um and it's actually very useful for us because this page is on docs.google.com so we can frame it but it also lacks The Click checking protections that the other Google Docs pages to so for example the share button is just clickable even in an if frame can we use that somehow I was looking into this a bit more and realized that the impact of this is even wider because if you take a Google drive folder ID and you throw it in that URL over there it opens up a folder as well with that share button available so if we can trick someone into clicking that share button we gain access to their Google drive folder very interesting so let's try it out let's do a demo so you can see here that it uh okay I don't know what's going on with that but uh let's investigate uh I pulled up my Deva tools uh very confused as to what's going on created a life frame with the same URL and now it works what's going on why why did it not work in our slideshow but it works when I add it manually very weird I opened up the network requests and started to look at what difference might be and eventually I narrowed it down to these headers you can see here that if these headers are present then this uh sa fetch site header decides whether we are allowed to see the page or not why is that the thing seems like a weird thing to implement uh it seems to me that this thing um is a way to prevent embedding Pages uh on Cross site Origins uh because uh there is uh no way to detect what the parent page is from the website itself without running JavaScript first so if you want to serve error page instead of blocking the framing outright then this is kind of the only way to do it so yeah that's unfortunate that this is a hurdle so we need to figure out how to get it to work for our attack uh and to simplify the things you can see the problem is we're going from YouTube to Google Docs if we went straight from Google dos to Google dos it would be fine we need to find a way to go from first from YouTube to some Google docs page that is happy with this weird redirect and only then onto the special file page you need to find that middle part so I got back to searching the stuff and one of the things I found interesting in the searches was that for some reason a lot of the documents had some like weird government stuff in there when you click on the link it disappears it's some sort of like chit thing I think like it turns out it's not legacy but it's for like logging in or switching accounts or SSO or whatever but we don't really care about that what we care about is that this is perfect for our wow why is it doing that spoiled the fun a bit okay pretend you didn't see that so uh all right so let's try out that government redirect thing I put sl/ in the file name and when I launch the presentation you can see that it works awesome so now all we need to do is create the simple click checking deck around it and we're done uh we start off by figuring out what we want the user to press we then mask this thing out with some stuff add some instructions and to make it more convincing uh we can do something like this now I know what some of you are thinking right now you would not fall for that don't worry I got you [Applause] but in all seriousness we need to do better that is not good enough requires too much Social Engineering so what's our current state right now our current attack requires two button presses and for you to type in an email address can we skip them somehow I remembered that Google Drive has this feat feature where you can request access to a folder or file you don't have access to doing so sends out an email where if you click on the button you get this popup you click that button you get this other popup and you click that button down there and you've given access to the file so maybe we can use that flow somehow it's not perfect but it's two clicks and you don't have to type in a suspicious email address I took a look at the email and it seems like it's on some URL that looks like this and well unfortunately for us this is a Google Drive domain not the Google Docs one but I figured that since the like different pages are so similar maybe we can just take the query parameters and throw them onto the Google dox URL would that work yep it works so uh can we do even better I want to look into this little dialog thing here I opened up my Dev tools I looked at the code set up a few breakpoints and well you know when you're doing testing and stuff it's always best to start off simple so I decided to get rid of all the query parameters except for the email one of course I refreshed the page and started debugging it uh I looked at it and it didn't really find anything too interesting but when I resumed the debugger I I saw this that's like a completely different dialog from what we saw earlier why are we getting that one for no reason I closed my Dev tools I refresh the page it's still the same one what's up with that well remember how I changed the Q param just to just spe a email address for some reason doing that goes through a different code path and gives us a form that looks like this and this form is amazing for us as the attackers because it outof fills the email it sets the permissions it does the notification stuff and it has a oneclick send button we just need one click and it's on a button labeled send that's perfect so let's create the demo for real this time uh we start off with uh that thing we just found we throw on like some Google forms stuff to make it believable and then we just you know start cing it up creatively do some styling whatever make it look convincing and now we have this presentation that includes a click checking attack inside of it we can pull it up uh change the url to SLR and we get the page that looks like this you send this Google Docs link to someone they are looking at it and they think that it's just a Google form they fill it out they make sure to never submit their passwords and they click the little send button it suspiciously disappears and when I look at my email I got her folder all right so uh what did Google think of this thing I submitted it to them in the July of last year they got back to me on the same day and a couple weeks later they gave me the Bounty couple months after that I came up came out with the blog post uh and then in February 2025 I think I did some talk on some stage uh so the Bounty it was $31 33.7 plus a $1,000 bonus which is pretty awesome um well I don't know if you can hear it in my voice but like on the very same day they announced that they're increasing the payouts five times [Applause] so uh yeah thank you so much uh a few things before I go I've written a blog post about it it's really cool you can find it there uh l. horse also my contact information uh for questions and stuff just find me later at disobey I'm happy to have a chat uh and I was thinking I want to take a selfie but I know a lot of people don't really want to be identifiable on photos so I decided to use my 3DS for that with like a 3 megapixel camera so none of you will actually be visible [Applause]